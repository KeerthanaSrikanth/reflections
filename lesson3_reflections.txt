When would you want to use a remote repository rather than keeping all your work local?
Ans. To be able to publically share and collaborate on your work. 

*******************************************************************************************

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?
Ans. Your local changes might conflict with the remote changes or may include a feature you don't 
want to include since multiple people may be contributing to a remote repository.

*******************************************************************************************

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?
Ans. Fork=Copy of a repository on GitHub. Usually someone else's repository which you can't change.
A fork is your own copy which you can make commits to.
Clone=A local copy of the repository on your system.
Branch=Different versions of your program. 

*******************************************************************************************

What is the benefit of having a copy of the last known state of the remote
stored locally?
Ans. Allows to run git diff and git status to check the differences between one's branch and
the latest verson of the remote without having to update one's branch or be online.
This can allow better working. 

******************************************************************************************

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
Ans. Probably send code snippets via email to simulate pull requests. 
Keep a master copy of the code on a website where people can download it. 

Harder: Version control would be harder. Also, diff and log advantages would be lost.
Easier: The necessity to learn Git and GitHub wouldn't be there. It would make collaboration easy for
first-time contributers.

*******************************************************************************************

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
Ans. When we are collaborating on a project. Modifying a separate branch allows people to review our changes before modifying master. 
This ensures master is always working, ever broken and also that all the changes to master are agreen upon by everyone.
Direct modification of master is less complicated and faster.

*********************************************************************************************
